name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  Build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-11
          - windows-2022
        node_version:
          - 18
        node_arch:
          - x64
        cpp_arch:
          - x64
        zmq_draft:
          - false
        zmq_version:
          - 4.3.4

        include:
          - os: windows-2022
            node_version: 18
            node_arch: x86
            cpp_arch: amd64_x86
            zmq_draft: false
            zmq_version: 4.3.4

          - os: windows-2022
            node_version: 18
            node_arch: x64
            cpp_arch: amd64_arm64
            zmq_draft: false
            zmq_version: 4.3.4

    env:
      ZMQ_VERSION: ${{ matrix.zmq_version }}
      ZMQ_DRAFT: ${{ matrix.zmq_draft }}
      ZMQ_SHARED: false
    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules/
            ~/.npm
            ~/AppData/Roaming/npm-cache
            ./build/zeromq-${{ matrix.zmq_version }}.tar.gz
            ./zeromq-${{ matrix.zmq_version }}.tar.gz
            ./libzmq
            ./build/libzmq
          key: "cache-OS:${{ matrix.os }}-arch:${{ matrix.node_arch }}-ZMQ_DRAFT:${{ matrix.zmq_draft }}-ZMQ_VERSION:${{ matrix.zmq_version }}-Node:${{ matrix.node_version }}-${{ hashFiles('./package.json') }}"
          restore-keys: |
            "cache-OS:${{ matrix.os }}-arch:${{ matrix.node_arch }}-ZMQ_DRAFT:${{ matrix.zmq_draft }}-ZMQ_VERSION:${{ matrix.zmq_version }}-Node:${{ matrix.node_version }}"

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          architecture: ${{ matrix.cpp_arch }}

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.node_arch }}

      - name: Install Mac-OS Dependencies
        if: contains(matrix.os, 'macos')
        run: |
          brew install libsodium

      - name: Install Dependencies and Build
        run: npm install

      - name: Prebuild
        run: npm run prebuild
        env:
          ARCH: ${{ matrix.node_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./prebuilds

      - name: Lint
        if: contains(matrix.os, 'ubuntu')
        run: npm run lint-test

      - name: Test (Debug)
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 1
          command: |
            npm run test.skip_gc_tests

      - name: Tests + GC Tests (Release)
        run: |
          npm run test
